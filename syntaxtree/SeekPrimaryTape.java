//
// Generated by JTB 1.3.2
//

package syntaxtree;

/**
 * Grammar production:
 * f0 -> "PrimaryTape.seek"
 * f1 -> "("
 * f2 -> Expression()
 * f3 -> ","
 * f4 -> Expression()
 * f5 -> ")"
 * f6 -> ";"
 */
public class SeekPrimaryTape implements Node {
   public NodeToken f0;
   public NodeToken f1;
   public Expression f2;
   public NodeToken f3;
   public Expression f4;
   public NodeToken f5;
   public NodeToken f6;

   public SeekPrimaryTape(NodeToken n0, NodeToken n1, Expression n2, NodeToken n3, Expression n4, NodeToken n5, NodeToken n6) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
      f3 = n3;
      f4 = n4;
      f5 = n5;
      f6 = n6;
   }

   public SeekPrimaryTape(Expression n0, Expression n1) {
      f0 = new NodeToken("PrimaryTape.seek");
      f1 = new NodeToken("(");
      f2 = n0;
      f3 = new NodeToken(",");
      f4 = n1;
      f5 = new NodeToken(")");
      f6 = new NodeToken(";");
   }

   public void accept(visitor.Visitor v) throws Exception {
      v.visit(this);
   }
   public <R,A> R accept(visitor.GJVisitor<R,A> v, A argu) throws Exception {
      return v.visit(this,argu);
   }
   public <R> R accept(visitor.GJNoArguVisitor<R> v) throws Exception {
      return v.visit(this);
   }
   public <A> void accept(visitor.GJVoidVisitor<A> v, A argu) throws Exception {
      v.visit(this,argu);
   }
}

