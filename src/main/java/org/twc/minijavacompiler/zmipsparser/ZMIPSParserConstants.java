/* Generated By:JavaCC: Do not edit this line. ZMIPSParserConstants.java */
package org.twc.minijavacompiler.zmipsparser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ZMIPSParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 6;
  /** RegularExpression Id. */
  int ASM_COMMENT = 7;
  /** RegularExpression Id. */
  int MIPS_COMMENT = 8;
  /** RegularExpression Id. */
  int FORMAL_COMMENT = 9;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 10;
  /** RegularExpression Id. */
  int print = 11;
  /** RegularExpression Id. */
  int answer = 12;
  /** RegularExpression Id. */
  int pubread = 13;
  /** RegularExpression Id. */
  int secread = 14;
  /** RegularExpression Id. */
  int pubseek = 15;
  /** RegularExpression Id. */
  int secseek = 16;
  /** RegularExpression Id. */
  int lw = 17;
  /** RegularExpression Id. */
  int sw = 18;
  /** RegularExpression Id. */
  int j = 19;
  /** RegularExpression Id. */
  int cjmp = 20;
  /** RegularExpression Id. */
  int cnjmp = 21;
  /** RegularExpression Id. */
  int move = 22;
  /** RegularExpression Id. */
  int not = 23;
  /** RegularExpression Id. */
  int and = 24;
  /** RegularExpression Id. */
  int or = 25;
  /** RegularExpression Id. */
  int xor = 26;
  /** RegularExpression Id. */
  int add = 27;
  /** RegularExpression Id. */
  int sub = 28;
  /** RegularExpression Id. */
  int mult = 29;
  /** RegularExpression Id. */
  int sll = 30;
  /** RegularExpression Id. */
  int srl = 31;
  /** RegularExpression Id. */
  int cmpe = 32;
  /** RegularExpression Id. */
  int cmpne = 33;
  /** RegularExpression Id. */
  int cmpg = 34;
  /** RegularExpression Id. */
  int cmpge = 35;
  /** RegularExpression Id. */
  int r = 36;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 37;
  /** RegularExpression Id. */
  int REGISTER = 38;
  /** RegularExpression Id. */
  int IDENTIFIER = 39;
  /** RegularExpression Id. */
  int LETTER = 40;
  /** RegularExpression Id. */
  int DIGIT = 41;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<SINGLE_LINE_COMMENT>",
    "<ASM_COMMENT>",
    "<MIPS_COMMENT>",
    "<FORMAL_COMMENT>",
    "<MULTI_LINE_COMMENT>",
    "\"print\"",
    "\"answer\"",
    "\"pubread\"",
    "\"secread\"",
    "\"pubseek\"",
    "\"secseek\"",
    "\"lw\"",
    "\"sw\"",
    "\"j\"",
    "\"cjmp\"",
    "\"cnjmp\"",
    "\"move\"",
    "\"not\"",
    "\"and\"",
    "\"or\"",
    "\"xor\"",
    "\"add\"",
    "\"sub\"",
    "\"mult\"",
    "\"sll\"",
    "\"srl\"",
    "\"cmpe\"",
    "\"cmpne\"",
    "\"cmpg\"",
    "\"cmpge\"",
    "\"$r\"",
    "<INTEGER_LITERAL>",
    "<REGISTER>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\"la\"",
  };

}
