//
// Generated by JTB 1.3.2 DIT@UoA patched
//

package org.twc.minijavacompiler.zmipssyntaxtree;

/**
 * Grammar production:
 * f0 -> ThreeRegInstrOp()
 * f1 -> Register()
 * f2 -> ","
 * f3 -> Register()
 * f4 -> ","
 * f5 -> SimpleExp()
 */
public class ThreeRegInstr implements Node {
   public ThreeRegInstrOp f0;
   public Register f1;
   public NodeToken f2;
   public Register f3;
   public NodeToken f4;
   public SimpleExp f5;

   public ThreeRegInstr(ThreeRegInstrOp n0, Register n1, NodeToken n2, Register n3, NodeToken n4, SimpleExp n5) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
      f3 = n3;
      f4 = n4;
      f5 = n5;
   }

   public ThreeRegInstr(ThreeRegInstrOp n0, Register n1, Register n2, SimpleExp n3) {
      f0 = n0;
      f1 = n1;
      f2 = new NodeToken(",");
      f3 = n2;
      f4 = new NodeToken(",");
      f5 = n3;
   }

   public void accept(org.twc.minijavacompiler.zmipsvisitor.Visitor v) throws Exception {
      v.visit(this);
   }
   public <R,A> R accept(org.twc.minijavacompiler.zmipsvisitor.GJVisitor<R,A> v, A argu) throws Exception {
      return v.visit(this,argu);
   }
   public <R> R accept(org.twc.minijavacompiler.zmipsvisitor.GJNoArguVisitor<R> v) throws Exception {
      return v.visit(this);
   }
   public <A> void accept(org.twc.minijavacompiler.zmipsvisitor.GJVoidVisitor<A> v, A argu) throws Exception {
      v.visit(this,argu);
   }
}

